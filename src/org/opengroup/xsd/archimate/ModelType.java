//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.29 at 10:00:32 PM CET 
//


package org.opengroup.xsd.archimate;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * 
 *                 This is the root model element.
 *                 It is a container for the elements, relationships, diagrams and organisations of the model.
 *                 
 *                 The "metadata" element is the optional metadata for the model.
 *                 The "name" element is the name of the model.
 *                 The "documentation" element is for the documentation of the model.
 *                 The "properties" element is optional and is for any property instance of the model.
 *                 The "elements" element is mandatory and is a container for all elements.
 *                 The "relationships" element is optional and is a container for any relationships.
 *                 The "organization" element is optional and is a container for structural organisation of model elements and relationships.
 *                 The "propertydefs" element is optional and is a container for any property definitions.
 *                 The "views" element is optional and is a container for any Views.
 *             
 * 
 * <p>Java class for modelType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="modelType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="metadata" type="{http://www.opengroup.org/xsd/archimate}MetadataType" minOccurs="0"/>
 *         &lt;element name="name" type="{http://www.opengroup.org/xsd/archimate}langStringType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="documentation" type="{http://www.opengroup.org/xsd/archimate}langStringType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="properties" type="{http://www.opengroup.org/xsd/archimate}propertiesType" minOccurs="0"/>
 *         &lt;element name="elements" type="{http://www.opengroup.org/xsd/archimate}elementsType"/>
 *         &lt;element name="relationships" type="{http://www.opengroup.org/xsd/archimate}relationshipsType" minOccurs="0"/>
 *         &lt;element name="organization" type="{http://www.opengroup.org/xsd/archimate}organizationType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="propertydefs" type="{http://www.opengroup.org/xsd/archimate}propertiesDefinitionsType" minOccurs="0"/>
 *         &lt;element name="views" type="{http://www.opengroup.org/xsd/archimate}viewsType" minOccurs="0"/>
 *         &lt;group ref="{http://www.opengroup.org/xsd/archimate}grp.any"/>
 *       &lt;/sequence>
 *       &lt;attribute name="identifier" use="required" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *       &lt;attribute name="version" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;anyAttribute namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "modelType", propOrder = {
    "metadata",
    "name",
    "documentation",
    "properties",
    "elements",
    "relationships",
    "organization",
    "propertydefs",
    "views",
    "any"
})
@XmlRootElement
public class ModelType {

    protected MetadataType metadata;
    protected List<LangStringType> name;
    protected List<LangStringType> documentation;
    protected PropertiesType properties;
    @XmlElement(required = true)
    protected ElementsType elements;
    protected RelationshipsType relationships;
    protected List<OrganizationType> organization;
    protected PropertiesDefinitionsType propertydefs;
    protected ViewsType views;
    @XmlAttribute(name = "identifier", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String identifier;
    @XmlAttribute(name = "version")
    protected String version;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    
    /**
     * Gets the value of the metadata property.
     * 
     * @return
     *     possible object is
     *     {@link MetadataType }
     *     
     */
    public MetadataType getMetadata() {
        return metadata;
    }

    /**
     * Sets the value of the metadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link MetadataType }
     *     
     */
    public void setMetadata(MetadataType value) {
        this.metadata = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the name property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LangStringType }
     * 
     * 
     */
    public List<LangStringType> getName() {
        if (name == null) {
            name = new ArrayList<LangStringType>();
        }
        return this.name;
    }

    /**
     * Gets the value of the documentation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the documentation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDocumentation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LangStringType }
     * 
     * 
     */
    public List<LangStringType> getDocumentation() {
        if (documentation == null) {
            documentation = new ArrayList<LangStringType>();
        }
        return this.documentation;
    }

    /**
     * Gets the value of the properties property.
     * 
     * @return
     *     possible object is
     *     {@link PropertiesType }
     *     
     */
    public PropertiesType getProperties() {
        return properties;
    }

    /**
     * Sets the value of the properties property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertiesType }
     *     
     */
    public void setProperties(PropertiesType value) {
        this.properties = value;
    }

    /**
     * Gets the value of the elements property.
     * 
     * @return
     *     possible object is
     *     {@link ElementsType }
     *     
     */
    public ElementsType getElements() {
        return elements;
    }

    /**
     * Sets the value of the elements property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElementsType }
     *     
     */
    public void setElements(ElementsType value) {
        this.elements = value;
    }

    /**
     * Gets the value of the relationships property.
     * 
     * @return
     *     possible object is
     *     {@link RelationshipsType }
     *     
     */
    public RelationshipsType getRelationships() {
        return relationships;
    }

    /**
     * Sets the value of the relationships property.
     * 
     * @param value
     *     allowed object is
     *     {@link RelationshipsType }
     *     
     */
    public void setRelationships(RelationshipsType value) {
        this.relationships = value;
    }

    /**
     * Gets the value of the organization property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the organization property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrganization().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationType }
     * 
     * 
     */
    public List<OrganizationType> getOrganization() {
        if (organization == null) {
            organization = new ArrayList<OrganizationType>();
        }
        return this.organization;
    }

    /**
     * Gets the value of the propertydefs property.
     * 
     * @return
     *     possible object is
     *     {@link PropertiesDefinitionsType }
     *     
     */
    public PropertiesDefinitionsType getPropertydefs() {
        return propertydefs;
    }

    /**
     * Sets the value of the propertydefs property.
     * 
     * @param value
     *     allowed object is
     *     {@link PropertiesDefinitionsType }
     *     
     */
    public void setPropertydefs(PropertiesDefinitionsType value) {
        this.propertydefs = value;
    }

    /**
     * Gets the value of the views property.
     * 
     * @return
     *     possible object is
     *     {@link ViewsType }
     *     
     */
    public ViewsType getViews() {
        return views;
    }

    /**
     * Sets the value of the views property.
     * 
     * @param value
     *     allowed object is
     *     {@link ViewsType }
     *     
     */
    public void setViews(ViewsType value) {
        this.views = value;
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIdentifier(String value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
